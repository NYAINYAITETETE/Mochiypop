from glyphsLib.cli import main
from fontTools.ttLib import TTFont, newTable
import glob, shutil, subprocess, os
import ufo2ft
import ufoLib2
from pathlib import Path

palt_set = "sub uniFF21 by A.full.palt", "sub uniFF22 by B.full.palt", "sub uniFF23 by C.full.palt", "sub uniFF24 by D.full.palt", "sub uniFF25 by E.full.palt", "sub uniFF26 by F.full.palt", "sub uniFF27 by G.full.palt", "sub uniFF28 by H.full.palt", "sub uniFF29 by I.full.palt", "sub uniFF2A by J.full.palt", "sub uniFF2B by K.full.palt", "sub uniFF2C by L.full.palt", "sub uniFF2D by M.full.palt", "sub uniFF2E by N.full.palt", "sub uniFF2F by O.full.palt", "sub uniFF30 by P.full.palt", "sub uniFF31 by Q.full.palt", "sub uniFF32 by R.full.palt", "sub uniFF33 by S.full.palt", "sub uniFF34 by T.full.palt", "sub uniFF35 by U.full.palt", "sub uniFF36 by V.full.palt", "sub uniFF37 by W.full.palt", "sub uniFF38 by X.full.palt", "sub uniFF39 by Y.full.palt", "sub uniFF3A by Z.full.palt", "sub uniFF41 by a.full.palt", "sub uniFF42 by b.full.palt", "sub uniFF43 by c.full.palt", "sub uniFF44 by d.full.palt", "sub uniFF45 by e.full.palt", "sub uniFF46 by f.full.palt", "sub uniFF47 by g.full.palt", "sub uniFF48 by h.full.palt", "sub uniFF49 by i.full.palt", "sub uniFF4A by j.full.palt", "sub uniFF4B by k.full.palt", "sub uniFF4C by l.full.palt", "sub uniFF4D by m.full.palt", "sub uniFF4E by n.full.palt", "sub uniFF4F by o.full.palt", "sub uniFF50 by p.full.palt", "sub uniFF51 by q.full.palt", "sub uniFF52 by r.full.palt", "sub uniFF53 by s.full.palt", "sub uniFF54 by t.full.palt", "sub uniFF55 by u.full.palt", "sub uniFF56 by v.full.palt", "sub uniFF57 by w.full.palt", "sub uniFF58 by x.full.palt", "sub uniFF59 by y.full.palt", "sub uniFF5A by z.full.palt", "sub uni3042 by uni3042.palt", "sub uni3041 by uni3041.palt", "sub uni3044 by uni3044.palt", "sub uni3043 by uni3043.palt", "sub uni3046 by uni3046.palt", "sub uni3045 by uni3045.palt", "sub uni3048 by uni3048.palt", "sub uni3047 by uni3047.palt", "sub uni304A by uni304A.palt", "sub uni3049 by uni3049.palt", "sub uni304B by uni304B.palt", "sub uni3095 by uni3095.palt", "sub uni304C by uni304C.palt", "sub uni304D by uni304D.palt", "sub uni304E by uni304E.palt", "sub uni304F by uni304F.palt", "sub uni3050 by uni3050.palt", "sub uni3051 by uni3051.palt", "sub uni3052 by uni3052.palt", "sub uni3096 by uni3096.palt", "sub uni3053 by uni3053.palt", "sub uni3054 by uni3054.palt", "sub uni3055 by uni3055.palt", "sub uni3056 by uni3056.palt", "sub uni3057 by uni3057.palt", "sub uni3058 by uni3058.palt", "sub uni3059 by uni3059.palt", "sub uni305A by uni305A.palt", "sub uni305B by uni305B.palt", "sub uni305C by uni305C.palt", "sub uni305D by uni305D.palt", "sub uni305E by uni305E.palt", "sub uni305F by uni305F.palt", "sub uni3060 by uni3060.palt", "sub uni3061 by uni3061.palt", "sub uni3062 by uni3062.palt", "sub uni3064 by uni3064.palt", "sub uni3063 by uni3063.palt", "sub uni3065 by uni3065.palt", "sub uni3066 by uni3066.palt", "sub uni3067 by uni3067.palt", "sub uni3068 by uni3068.palt", "sub uni3069 by uni3069.palt", "sub uni306A by uni306A.palt", "sub uni306B by uni306B.palt", "sub uni306C by uni306C.palt", "sub uni306D by uni306D.palt", "sub uni306E by uni306E.palt", "sub uni306F by uni306F.palt", "sub uni3070 by uni3070.palt", "sub uni3071 by uni3071.palt", "sub uni3072 by uni3072.palt", "sub uni3073 by uni3073.palt", "sub uni3074 by uni3074.palt", "sub uni3075 by uni3075.palt", "sub uni3076 by uni3076.palt", "sub uni3077 by uni3077.palt", "sub uni3078 by uni3078.palt", "sub uni3079 by uni3079.palt", "sub uni307A by uni307A.palt", "sub uni307B by uni307B.palt", "sub uni307C by uni307C.palt", "sub uni307D by uni307D.palt", "sub uni307E by uni307E.palt", "sub uni307F by uni307F.palt", "sub uni3080 by uni3080.palt", "sub uni3081 by uni3081.palt", "sub uni3082 by uni3082.palt", "sub uni3084 by uni3084.palt", "sub uni3083 by uni3083.palt", "sub uni3086 by uni3086.palt", "sub uni3085 by uni3085.palt", "sub uni3088 by uni3088.palt", "sub uni3087 by uni3087.palt", "sub uni3089 by uni3089.palt", "sub uni308A by uni308A.palt", "sub uni308B by uni308B.palt", "sub uni308C by uni308C.palt", "sub uni308D by uni308D.palt", "sub uni308F by uni308F.palt", "sub uni308E by uni308E.palt", "sub uni3090 by uni3090.palt", "sub uni3091 by uni3091.palt", "sub uni3092 by uni3092.palt", "sub uni3093 by uni3093.palt", "sub uni3094 by uni3094.palt", "sub uni30A2 by uni30A2.palt", "sub uni30A1 by uni30A1.palt", "sub uni30A4 by uni30A4.palt", "sub uni30A3 by uni30A3.palt", "sub uni30A6 by uni30A6.palt", "sub uni30A5 by uni30A5.palt", "sub uni30A8 by uni30A8.palt", "sub uni30A7 by uni30A7.palt", "sub uni30AA by uni30AA.palt", "sub uni30A9 by uni30A9.palt", "sub uni30AB by uni30AB.palt", "sub uni30F5 by uni30F5.palt", "sub uni30AC by uni30AC.palt", "sub uni30AD by uni30AD.palt", "sub uni30AE by uni30AE.palt", "sub uni30AF by uni30AF.palt", "sub uni31F0 by uni31F0.palt", "sub uni30B0 by uni30B0.palt", "sub uni30B1 by uni30B1.palt", "sub uni30F6 by uni30F6.palt", "sub uni30B2 by uni30B2.palt", "sub uni30B3 by uni30B3.palt", "sub uni30B4 by uni30B4.palt", "sub uni30B5 by uni30B5.palt", "sub uni30B6 by uni30B6.palt", "sub uni30B7 by uni30B7.palt", "sub uni31F1 by uni31F1.palt", "sub uni30B8 by uni30B8.palt", "sub uni30B9 by uni30B9.palt", "sub uni31F2 by uni31F2.palt", "sub uni30BA by uni30BA.palt", "sub uni30BB by uni30BB.palt", "sub uni30BC by uni30BC.palt", "sub uni30BD by uni30BD.palt", "sub uni30BE by uni30BE.palt", "sub uni30BF by uni30BF.palt", "sub uni30C0 by uni30C0.palt", "sub uni30C1 by uni30C1.palt", "sub uni30C2 by uni30C2.palt", "sub uni30C4 by uni30C4.palt", "sub uni30C3 by uni30C3.palt", "sub uni30C5 by uni30C5.palt", "sub uni30C6 by uni30C6.palt", "sub uni30C7 by uni30C7.palt", "sub uni30C8 by uni30C8.palt", "sub uni31F3 by uni31F3.palt", "sub uni30C9 by uni30C9.palt", "sub uni30CA by uni30CA.palt", "sub uni30CB by uni30CB.palt", "sub uni30CC by uni30CC.palt", "sub uni31F4 by uni31F4.palt", "sub uni30CD by uni30CD.palt", "sub uni30CE by uni30CE.palt", "sub uni30CF by uni30CF.palt", "sub uni31F5 by uni31F5.palt", "sub uni30D0 by uni30D0.palt", "sub uni30D1 by uni30D1.palt", "sub uni30D2 by uni30D2.palt", "sub uni31F6 by uni31F6.palt", "sub uni30D3 by uni30D3.palt", "sub uni30D4 by uni30D4.palt", "sub uni30D5 by uni30D5.palt", "sub uni31F7 by uni31F7.palt", "sub uni30D6 by uni30D6.palt", "sub uni30D7 by uni30D7.palt", "sub uni30D8 by uni30D8.palt", "sub uni31F8 by uni31F8.palt", "sub uni30D9 by uni30D9.palt", "sub uni30DA by uni30DA.palt", "sub uni30DB by uni30DB.palt", "sub uni31F9 by uni31F9.palt", "sub uni30DC by uni30DC.palt", "sub uni30DD by uni30DD.palt", "sub uni30DE by uni30DE.palt", "sub uni30DF by uni30DF.palt", "sub uni30E0 by uni30E0.palt", "sub uni31FA by uni31FA.palt", "sub uni30E1 by uni30E1.palt", "sub uni30E2 by uni30E2.palt", "sub uni30E4 by uni30E4.palt", "sub uni30E3 by uni30E3.palt", "sub uni30E6 by uni30E6.palt", "sub uni30E5 by uni30E5.palt", "sub uni30E8 by uni30E8.palt", "sub uni30E7 by uni30E7.palt", "sub uni30E9 by uni30E9.palt", "sub uni31FB by uni31FB.palt", "sub uni30EA by uni30EA.palt", "sub uni31FC by uni31FC.palt", "sub uni30EB by uni30EB.palt", "sub uni31FD by uni31FD.palt", "sub uni30EC by uni30EC.palt", "sub uni31FE by uni31FE.palt", "sub uni30ED by uni30ED.palt", "sub uni31FF by uni31FF.palt", "sub uni30EF by uni30EF.palt", "sub uni30EE by uni30EE.palt", "sub uni30F7 by uni30F7.palt", "sub uni30F0 by uni30F0.palt", "sub uni30F8 by uni30F8.palt", "sub uni30F1 by uni30F1.palt", "sub uni30F9 by uni30F9.palt", "sub uni30F2 by uni30F2.palt", "sub uni30FA by uni30FA.palt", "sub uni30F3 by uni30F3.palt", "sub uni30F4 by uni30F4.palt", "sub a_voicedcombhira by a_voicedcombhira.palt", "sub i_voicedcombhira by i_voicedcombhira.palt", "sub e_voicedcombhira by e_voicedcombhira.palt", "sub o_voicedcombhira by o_voicedcombhira.palt", "sub ka_semivoicedcombhira by ka_semivoicedcombhira.palt", "sub ki_semivoicedcombhira by ki_semivoicedcombhira.palt", "sub ku_semivoicedcombhira by ku_semivoicedcombhira.palt", "sub ke_semivoicedcombhira by ke_semivoicedcombhira.palt", "sub ko_semivoicedcombhira by ko_semivoicedcombhira.palt", "sub n_voicedcombhira by n_voicedcombhira.palt", "sub a_voicedcombkata by a_voicedcombkata.palt", "sub i_voicedcombkata by i_voicedcombkata.palt", "sub e_voicedcombkata by e_voicedcombkata.palt", "sub o_voicedcombkata by o_voicedcombkata.palt", "sub ka_semivoicedcombkata by ka_semivoicedcombkata.palt", "sub ki_semivoicedcombkata by ki_semivoicedcombkata.palt", "sub ku_semivoicedcombkata by ku_semivoicedcombkata.palt", "sub ke_semivoicedcombkata by ke_semivoicedcombkata.palt", "sub ko_semivoicedcombkata by ko_semivoicedcombkata.palt", "sub se_semivoicedcombkata by se_semivoicedcombkata.palt", "sub tu_semivoicedcombkata by tu_semivoicedcombkata.palt", "sub to_semivoicedcombkata by to_semivoicedcombkata.palt", "sub husmall_semivoicedcombkata by husmall_semivoicedcombkata.palt", "sub n_voicedcombkata by n_voicedcombkata.palt", "sub uni3035 by uni3035.palt", "sub uni3033 by uni3033.palt", "sub uni3034 by uni3034.palt", "sub uniFF10 by zero.full.palt", "sub uniFF11 by one.full.palt", "sub uniFF12 by two.full.palt", "sub uniFF13 by three.full.palt", "sub uniFF14 by four.full.palt", "sub uniFF15 by five.full.palt", "sub uniFF16 by six.full.palt", "sub uniFF17 by seven.full.palt", "sub uniFF18 by eight.full.palt", "sub uniFF19 by nine.full.palt", "sub uni2049 by uni2049.palt", "sub exclamdbl by exclamdbl.palt", "sub uni2047 by uni2047.palt", "sub uni2048 by uni2048.palt", "sub uniFF06 by ampersand.full.palt", "sub uniFF20 by at.full.palt", "sub uniFF1A by colon.full.palt", "sub uniFF0C by comma.full.palt", "sub uniFF01 by exclam.full.palt", "sub uni2049.locl by uni2049.locl.palt", "sub exclamdbl.locl by exclamdbl.locl.palt", "sub uni2047.locl by uni2047.locl.palt", "sub uni2048.locl by uni2048.locl.palt", "sub uniFF05 by percent.full.palt", "sub uniFF0E by period.full.palt", "sub uniFF1F by question.full.palt", "sub uni3008 by uni3008.palt", "sub uni3009 by uni3009.palt", "sub uni3010 by uni3010.palt", "sub uni3011 by uni3011.palt", "sub uni300C by uni300C.palt", "sub uni300D by uni300D.palt", "sub uni300A by uni300A.palt", "sub uni300B by uni300B.palt", "sub uni3014 by uni3014.palt", "sub uni3015 by uni3015.palt", "sub uni300E by uni300E.palt", "sub uni300F by uni300F.palt", "sub uniFF3B by bracketleft.full.palt", "sub uniFF3D by bracketright.full.palt", "sub uni301F by uni301F.palt", "sub uni301D by uni301D.palt", "sub quotedblleft.full by quotedblleft.full.palt", "sub quotedblright.full by quotedblright.full.palt", "sub quoteleft.full by quoteleft.full.palt", "sub quoteright.full by quoteright.full.palt", "sub uni30FB by uni30FB.palt", "sub uniFF5E by asciitilde.full.palt", "sub uniFF1D by equal.full.palt", "sub minus.full by minus.full.palt", "sub multiply.full by multiply.full.palt", "sub divide.full by divide.full.palt", "sub plusminus.full by plusminus.full.palt", "sub uniFF0B by plus.full.palt", "sub uni30FC by uni30FC.palt", "sub uniE000 by uniE000.palt", "sub uniE001 by uniE001.palt", "sub uniE002 by uniE002.palt", "sub uniE003 by uniE003.palt", "sub uniE004 by uniE004.palt", "sub uniE005 by uniE005.palt", "sub uniE006 by uniE006.palt", "sub uniE007 by uniE007.palt", "sub uniE064 by uniE064.palt", "sub uniE065 by uniE065.palt", "sub uniE082 by uniE082.palt", "sub uniE083 by uniE083.palt", "sub uniE084 by uniE084.palt", "sub uniE085 by uniE085.palt", "sub uniE086 by uniE086.palt", "sub uniE087 by uniE087.palt", "sub uniE088 by uniE088.palt", "sub uniE089 by uniE089.palt", "sub uniE08A by uniE08A.palt", "sub uniE08B by uniE08B.palt", "sub uniE08C by uniE08C.palt", "sub uniE08D by uniE08D.palt", "sub uniE08E by uniE08E.palt", "sub uniE08F by uniE08F.palt", "sub uniE090 by uniE090.palt", "sub uniE091 by uniE091.palt", "sub uniE092 by uniE092.palt", "sub uniE093 by uniE093.palt", "sub uniE094 by uniE094.palt", "sub uniE095 by uniE095.palt", "sub uniE096 by uniE096.palt", "sub uniE097 by uniE097.palt", "sub uniE098 by uniE098.palt", "sub uniE099 by uniE099.palt", "sub uniE09A by uniE09A.palt", "sub uniE09B by uniE09B.palt", "sub uniE09C by uniE09C.palt", "sub uniE09D by uniE09D.palt", "sub uniE09E by uniE09E.palt", "sub uniE09F by uniE09F.palt", "sub uniE0A0 by uniE0A0.palt", "sub uniE0A1 by uniE0A1.palt", "sub uniE0A2 by uniE0A2.palt", "sub uniE0A3 by uniE0A3.palt", "sub uniE0A4 by uniE0A4.palt", "sub uniE0A5 by uniE0A5.palt", "sub uniE0A6 by uniE0A6.palt", "sub uniE0A7 by uniE0A7.palt", "sub uniE0A8 by uniE0A8.palt", "sub uniE0A9 by uniE0A9.palt", "sub uniE0AA by uniE0AA.palt", "sub uniE0AB by uniE0AB.palt", "sub uniE0AC by uniE0AC.palt", "sub uniE0AD by uniE0AD.palt", "sub uniE0AE by uniE0AE.palt", "sub uniE0AF by uniE0AF.palt", "sub uniE0B0 by uniE0B0.palt", "sub uniE0B1 by uniE0B1.palt", "sub uniE0B2 by uniE0B2.palt", "sub uniE0B3 by uniE0B3.palt", "sub uniE0B4 by uniE0B4.palt", "sub uniE0B5 by uniE0B5.palt", "sub uniE0B6 by uniE0B6.palt", "sub uniE0B7 by uniE0B7.palt", "sub uniE0B8 by uniE0B8.palt", "sub uniE0B9 by uniE0B9.palt", "sub uniE0BA by uniE0BA.palt", "sub uniE0BB by uniE0BB.palt", "sub uniE0BC by uniE0BC.palt", "sub uniE0BD by uniE0BD.palt", "sub uniE0BE by uniE0BE.palt", "sub uniE0BF by uniE0BF.palt", "sub uniE0C0 by uniE0C0.palt", "sub uniE0C1 by uniE0C1.palt", "sub uniE0C2 by uniE0C2.palt", "sub uniE0C3 by uniE0C3.palt", "sub uniE0C4 by uniE0C4.palt", "sub uniE0C5 by uniE0C5.palt", "sub uniE0C6 by uniE0C6.palt", "sub uniE0C7 by uniE0C7.palt", "sub uniE0C8 by uniE0C8.palt", "sub uniE0C9 by uniE0C9.palt", "sub uniE0CA by uniE0CA.palt", "sub uniE0CB by uniE0CB.palt", "sub uniE0CC by uniE0CC.palt", "sub uniE0CD by uniE0CD.palt", "sub uniE0CE by uniE0CE.palt", "sub uniE0CF by uniE0CF.palt", "sub uniE0D0 by uniE0D0.palt", "sub uniE0D1 by uniE0D1.palt", "sub uniE0D2 by uniE0D2.palt", "sub uniE0D3 by uniE0D3.palt", "sub uniE0D4 by uniE0D4.palt", "sub uniE0D5 by uniE0D5.palt", "sub uniE0D6 by uniE0D6.palt", "sub uniE0D7 by uniE0D7.palt", "sub uniE0D8 by uniE0D8.palt", "sub uniE0D9 by uniE0D9.palt", "sub uniE0DA by uniE0DA.palt", "sub uniE0DB by uniE0DB.palt", "sub uniE0DC by uniE0DC.palt", "sub uniE0DD by uniE0DD.palt", "sub uniE0E2 by uniE0E2.palt", "sub uniE0E3 by uniE0E3.palt"

def DSIG_modification(font:TTFont):
    font["DSIG"] = newTable("DSIG")     #need that stub dsig
    font["DSIG"].ulVersion = 1
    font["DSIG"].usFlag = 0
    font["DSIG"].usNumSigs = 0
    font["DSIG"].signatureRecords = []
    font["head"].flags |= 1 << 3        #sets flag to always round PPEM to integer

print ("Converting to UFO")
main(("glyphs2ufo", "sources/MochiyPop.glyphs"))

print ("[Mochiy Pop One] Compiling")
exportFont = ufoLib2.Font.open("sources/MochiyPopOne-Regular.ufo")

exportFont.lib['com.github.googlei18n.ufo2ft.filters'] = [{
    "name": "decomposeComponents",
    "pre": 1,
}]

static_ttf = ufo2ft.compileTTF(exportFont, removeOverlaps=True)
DSIG_modification(static_ttf)
static_ttf["name"].addMultilingualName({'ja':'モッチーポップ One'}, static_ttf, nameID = 1, windows=True, mac=False)
static_ttf["name"].addMultilingualName({'ja':'Regular'}, static_ttf, nameID = 2, windows=True, mac=False)
print ("[Mochiy Pop One] Saving")
static_ttf.save("fonts/ttf/MochiyPopOne-Regular.ttf")

exportFont.info.familyName = "Mochiy Pop P One"

print ("[Mochiy Pop P One] Compiling")
p_ttf = ufo2ft.compileTTF(exportFont, removeOverlaps=True)
DSIG_modification(p_ttf)

p_ttf["name"].addMultilingualName({'ja':'モッチーポップ P One'}, p_ttf, nameID = 1, windows=True, mac=False)
p_ttf["name"].addMultilingualName({'ja':'Regular'}, p_ttf, nameID = 2, windows=True, mac=False)

print ("[Mochiy Pop P One] Changing full width kana metrics to proportional")

for sub in palt_set:
    split = sub.split(" by ")
    p = split[1]
    fw = split[0][4:]
    p_ttf["hmtx"].metrics[fw] = p_ttf["hmtx"].metrics[p]

print ("[Mochiy Pop P One] Saving")
p_ttf.save("fonts/ttf/MochiyPopPOne-Regular.ttf")

shutil.rmtree("sources/MochiyPopOne-Regular.ufo")
os.remove("sources/MochiyPop.designspace")

ttf = Path("fonts/ttf")

for file in ttf.glob("*.ttf"):
    print ("["+str(file).split("/")[2][:-4]+"] Autohinting")
    subprocess.check_call(
            [
                "ttfautohint",
                "--stem-width",
                "nsn",
                str(file),
                str(file)[:-4]+"-hinted.ttf",
            ]
        )
    shutil.move(str(file)[:-4]+"-hinted.ttf", str(file))